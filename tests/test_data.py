"""Test that the funcs that calculate GHG continue to return correct values during refactor."""

from main import ghg_html as g

"""
print("Stationary - Residential = ", ResGHG)
print("Stationary - Commercial and Industrial = ", ComIndGHG)
print("Mobile - Highway = ", MobHighwayGHG)
print("Mobile - Aviation = ", MobAviationGHG)
print("Mobile - Other = ", MobOtherGHG)
print("Mobile - Rail Transit = ", MobTransitGHG)
print("Non-Energy = ", NonEnergyGHG)
"""


def test_calc_res_ghg():
    res_ghg, res_ngbtu = g.CalcResGHG(
        g.pop_factor,
        g.urban_pop_percent,
        g.UrbanBTUPerCapUsed,
        g.PerCapResEnergyUse,
        g.UrbanPerResElectrification,
        g.UrbanPerResElecUsed,
        g.PerUrbanElecBTUPerCapUsedSpaceHeating,
        g.PerUrbanElecBTUPerCapUsedWaterHeating,
        g.PerUrbanElecBTUPerCapUsedOther,
        g.UrbanPerResNGUsed,
        g.PerUrbanNGBTUPerCapUsedSpaceHeating,
        g.PerUrbanNGBTUPerCapUsedWaterHeating,
        g.PerUrbanNGBTUPerCapUsedOther,
        g.UrbanPerResFOKerUsed,
        g.PerUrbanFOKerBTUPerCapUsedSpaceHeating,
        g.PerUrbanFOKerBTUPerCapUsedWaterHeating,
        g.PerUrbanFOKerBTUPerCapUsedOther,
        g.UrbanPerResLPGUsed,
        g.PerUrbanLPGBTUPerCapUsedSpaceHeating,
        g.PerUrbanLPGBTUPerCapUsedWaterHeating,
        g.PerUrbanLPGBTUPerCapUsedOther,
        g.UrbanPerResFFNGUsed,
        g.UrbanPerResFFFOKerUsed,
        g.UrbanPerResFFLPGUsed,
        g.UrbanPerElecHeatingUsedforSpaceHeating,
        g.UrbanPerResFFSpaceHeatingNGUsed,
        g.UrbanPerElecHeatingUsedforWaterHeating,
        g.UrbanPerResFFWaterHeatingNGUsed,
        g.UrbanPerResFFSpaceHeatingFOKerUsed,
        g.UrbanPerResFFWaterHeatingFOKerUsed,
        g.UrbanPerResFFSpaceHeatingLPGUsed,
        g.UrbanPerResFFWaterHeatingLPGUsed,
        g.PerEnergyToUseResElecSpaceHeating,
        g.PerEnergyToUseResElecWaterHeating,
        g.PerEnergyToUseResElecOther,
        g.PerEnergyToUseResElecSpaceHeatingSwitch,
        g.PerEnergyToUseResElecWaterHeatingSwitch,
        g.PerEnergyToUseResNGSpaceHeating,
        g.PerEnergyToUseResNGWaterHeating,
        g.PerEnergyToUseResNGOther,
        g.PerEnergyToUseResFOKerSpaceHeating,
        g.PerEnergyToUseResFOKerWaterHeating,
        g.PerEnergyToUseResFOKerOther,
        g.PerEnergyToUseResLPGSpaceHeating,
        g.PerEnergyToUseResLPGWaterHeating,
        g.PerEnergyToUseResLPGOther,
        g.SuburbanBTUPerCapUsed,
        g.SuburbanPerResElectrification,
        g.SuburbanPerResElecUsed,
        g.PerSuburbanElecBTUPerCapUsedSpaceHeating,
        g.PerSuburbanElecBTUPerCapUsedWaterHeating,
        g.PerSuburbanElecBTUPerCapUsedOther,
        g.SuburbanPerResNGUsed,
        g.PerSuburbanNGBTUPerCapUsedSpaceHeating,
        g.PerSuburbanNGBTUPerCapUsedWaterHeating,
        g.PerSuburbanNGBTUPerCapUsedOther,
        g.SuburbanPerResFOKerUsed,
        g.PerSuburbanFOKerBTUPerCapUsedSpaceHeating,
        g.PerSuburbanFOKerBTUPerCapUsedWaterHeating,
        g.PerSuburbanFOKerBTUPerCapUsedOther,
        g.SuburbanPerResLPGUsed,
        g.PerSuburbanLPGBTUPerCapUsedSpaceHeating,
        g.PerSuburbanLPGBTUPerCapUsedWaterHeating,
        g.PerSuburbanLPGBTUPerCapUsedOther,
        g.SuburbanPerResFFNGUsed,
        g.SuburbanPerResFFFOKerUsed,
        g.SuburbanPerResFFLPGUsed,
        g.SuburbanPerElecHeatingUsedforSpaceHeating,
        g.SuburbanPerResFFSpaceHeatingNGUsed,
        g.SuburbanPerElecHeatingUsedforWaterHeating,
        g.SuburbanPerResFFWaterHeatingNGUsed,
        g.SuburbanPerResFFSpaceHeatingFOKerUsed,
        g.SuburbanPerResFFWaterHeatingFOKerUsed,
        g.SuburbanPerResFFSpaceHeatingLPGUsed,
        g.SuburbanPerResFFWaterHeatingLPGUsed,
        g.RuralBTUPerCapUsed,
        g.RuralPerResElectrification,
        g.RuralPerResElecUsed,
        g.PerRuralElecBTUPerCapUsedSpaceHeating,
        g.PerRuralElecBTUPerCapUsedWaterHeating,
        g.PerRuralElecBTUPerCapUsedOther,
        g.RuralPerResNGUsed,
        g.PerRuralNGBTUPerCapUsedSpaceHeating,
        g.PerRuralNGBTUPerCapUsedWaterHeating,
        g.PerRuralNGBTUPerCapUsedOther,
        g.RuralPerResFOKerUsed,
        g.PerRuralFOKerBTUPerCapUsedSpaceHeating,
        g.PerRuralFOKerBTUPerCapUsedWaterHeating,
        g.PerRuralFOKerBTUPerCapUsedOther,
        g.RuralPerResLPGUsed,
        g.PerRuralLPGBTUPerCapUsedSpaceHeating,
        g.PerRuralLPGBTUPerCapUsedWaterHeating,
        g.PerRuralLPGBTUPerCapUsedOther,
        g.RuralPerResFFNGUsed,
        g.RuralPerResFFFOKerUsed,
        g.RuralPerResFFLPGUsed,
        g.RuralPerElecHeatingUsedforSpaceHeating,
        g.RuralPerResFFSpaceHeatingNGUsed,
        g.RuralPerElecHeatingUsedforWaterHeating,
        g.RuralPerResFFWaterHeatingNGUsed,
        g.RuralPerResFFSpaceHeatingFOKerUsed,
        g.RuralPerResFFWaterHeatingFOKerUsed,
        g.RuralPerResFFSpaceHeatingLPGUsed,
        g.RuralPerResFFWaterHeatingLPGUsed,
        g.BTUperMWh,
        g.grid_coal,
        g.LB_CO2e_MWh_Coal,
        g.grid_oil,
        g.LB_CO2e_MWh_Oil,
        g.grid_ng,
        g.LB_CO2e_MWh_NG,
        g.grid_other_ff,
        g.LB_CO2e_MWh_OtherFos,
        g.MMTperLB,
        g.PerCombCapture,
        g.BTUperCCF,
        g.MCFperCCF,
        g.LB_CO2e_MCF_NG,
        g.BTUperGallonFOKer,
        g.MMTCO2e_ThBarrel_FOKer,
        g.ThBarrelperGallon,
        g.BTUperGallonLPG,
        g.MMTCO2e_ThBarrel_LPG,
    )
    assert res_ghg == 15.030605191538609


def test_calc_ci_ghg():
    ci_ghg = g.CalcComIndGHG(
        g.ComIndPerElectrification,
        g.ComIndBBtuUsed,
        g.PerComIndEnergyUse,
        g.PerEnergyToUseComIndElec,
        g.BTUperMWh,
        g.grid_coal,
        g.LB_CO2e_MWh_Coal,
        g.grid_oil,
        g.LB_CO2e_MWh_Oil,
        g.grid_ng,
        g.LB_CO2e_MWh_NG,
        g.grid_other_ff,
        g.LB_CO2e_MWh_OtherFos,
        g.MMTperLB,
        g.PerCombCapture,
        g.ComIndPerFossilFuelUsed2015,
        g.ComIndPerFFNGUsed,
        g.PerEnergyToUseComIndNG,
        g.MTCO2ePerBBtuNG,
        g.MMTperMT,
        g.ComIndPerFFCoalUsed,
        g.PerEnergyToUseComIndCoal,
        g.MTCO2ePerBBtuCoal,
        g.ComIndPerFFDFOUsed,
        g.PerEnergyToUseComIndDFO,
        g.MTCO2ePerBBtuDFO,
        g.ComIndPerFFKerUsed,
        g.PerEnergyToUseComIndKer,
        g.MTCO2ePerBBtuKer,
        g.ComIndPerFFLPGUsed,
        g.PerEnergyToUseComIndLPG,
        g.MTCO2ePerBBtuLPG,
        g.ComIndPerFFMotGasUsed,
        g.PerEnergyToUseComIndMotGas,
        g.MTCO2ePerBBtuMotGas,
        g.ComIndPerFFRFOUsed,
        g.PerEnergyToUseComIndRFO,
        g.MTCO2ePerBBtuRFO,
        g.ComIndPerFFPetCokeUsed,
        g.PerEnergyToUseComIndPetCoke,
        g.MTCO2ePerBBtuPetCoke,
        g.ComIndPerFFStillGasUsed,
        g.PerEnergyToUseComIndStillGas,
        g.MTCO2ePerBBtuStillGas,
        g.ComIndPerSpecialNaphthasUsed,
        g.PerEnergyToUseComIndSpecialNaphthas,
        g.MTCO2ePerBBtuSpecialNaphthas,
    )

    assert ci_ghg == 27.47829273576916


def test_calc_mob_highway_GHG():
    ghg = g.CalcMobHighwayGHG(
        g.urban_pop_percent,
        g.pop_factor,
        g.UrbanVMTperPop,
        g.suburban_pop_percent,
        g.SuburbanVMTperPop,
        g.rural_pop_percent,
        g.RuralVMTperPop,
        g.VMTperCap,
        g.PerEVMT,
        g.RegionalFleetMPG,
        g.CO2eperGallonGasoline,
        g.MMTperLB,
        g.EVEff,
        g.grid_coal,
        g.LB_CO2e_MWh_Coal,
        g.grid_oil,
        g.LB_CO2e_MWh_Oil,
        g.grid_ng,
        g.LB_CO2e_MWh_NG,
        g.grid_other_ff,
        g.LB_CO2e_MWh_OtherFos,
        g.PerCombCapture,
    )

    assert ghg == 17.937509502305318


def test_calc_mob_aviation_ghg():
    ghg = g.CalcMobAviationGHG(g.pop_factor, g.PerAviation)

    assert ghg == 3.9


def test_calc_mob_transit_ghg():
    ghg = g.CalcMobTransitGHG(
        g.pop_factor,
        g.BTUperMWh,
        g.urban_pop_percent,
        g.TransRailUrbanPerElecMotion,
        g.TransRailSuburbanPerElecMotion,
        g.TransRailRuralPerElecMotion,
        g.TransRailUrbanBTUPerCapMotion,
        g.suburban_pop_percent,
        g.TransRailSuburbanBTUPerCapMotion,
        g.rural_pop_percent,
        g.TransRailRuralBTUPerCapMotion,
        g.PerEnergyToMotionRailElec,
        g.grid_coal,
        g.LB_CO2e_MWh_Coal,
        g.grid_oil,
        g.LB_CO2e_MWh_Oil,
        g.grid_ng,
        g.LB_CO2e_MWh_NG,
        g.grid_other_ff,
        g.LB_CO2e_MWh_OtherFos,
        g.MMTperLB,
        g.PerCombCapture,
        g.TransRailMTCO2ePerBBtuDiesel,
        g.MMTperMT,
        g.PerEnergyToMotionRailDiesel,
        g.PerTransRailRidership,
    )

    assert ghg == 0.17340094875122483


def test_calc_mob_other_ghg():
    ghg = g.CalcMobOtherGHG(
        g.FreightRailBBtuMotion,
        g.FreightRailPerElecMotion,
        g.PerEnergyToMotionRailElec,
        g.BTUperMWh,
        g.grid_coal,
        g.LB_CO2e_MWh_Coal,
        g.grid_oil,
        g.LB_CO2e_MWh_Oil,
        g.grid_ng,
        g.LB_CO2e_MWh_NG,
        g.grid_other_ff,
        g.LB_CO2e_MWh_OtherFos,
        g.MMTperLB,
        g.PerCombCapture,
        g.FreightRailMTCO2ePerBBtuDiesel,
        g.MMTperMT,
        g.PerEnergyToMotionRailDiesel,
        g.PerFreightRail,
        g.InterCityRailBBtuMotion,
        g.InterCityRailPerElecMotion,
        g.InterCityRailMTCO2ePerBBtuDiesel,
        g.PerInterCityRail,
        g.MarinePortPerElectrification,
        g.MarinePortPerFossilFuelMotion2015,
        g.MarinePortBBtuMotion,
        g.PerEnergyToMotionMarineElec,
        g.MarinePortPerFFRFOMotion,
        g.MarinePortMTCO2ePerBBtuRFO,
        g.PerEnergyToMotionMarineRFO,
        g.MarinePortPerFFDFOMotion,
        g.MarinePortMTCO2ePerBBtuDFO,
        g.PerEnergyToMotionMarineDFO,
        g.PerMarinePort,
        g.OffroadPerElectrification,
        g.OffroadPerFossilFuelMotion2015,
        g.OffroadBBtuMotion,
        g.PerEnergyToMotionOffroadElec,
        g.OffroadPerFFMotGasMotion,
        g.OffroadMTCO2ePerBBtuMotGas,
        g.PerEnergyToMotionOffroadMotGas,
        g.OffroadPerFFDFOMotion,
        g.OffroadMTCO2ePerBBtuDFO,
        g.PerEnergyToMotionOffroadDFO,
        g.OffroadPerFFLPGMotion,
        g.OffroadMTCO2ePerBBtuLPG,
        g.PerEnergyToMotionOffroadLPG,
        g.PerOffroad,
    )
    assert ghg == 1.1213238804345218


def test_calc_non_energy_ghg():
    ghg = g.CalcNonEnergyGHG(
        g.PerAg,
        g.PerWaste,
        g.pop_factor,
        g.PerWasteWater,
        g.PerIP,
        g.urban_pop_percent,
        g.UrbanBTUPerCapUsed,
        g.PerCapResEnergyUse,
        g.UrbanPerResElectrification,
        g.UrbanPerResElecUsed,
        g.PerUrbanElecBTUPerCapUsedSpaceHeating,
        g.PerUrbanElecBTUPerCapUsedWaterHeating,
        g.PerUrbanElecBTUPerCapUsedOther,
        g.UrbanPerResNGUsed,
        g.PerUrbanNGBTUPerCapUsedSpaceHeating,
        g.PerUrbanNGBTUPerCapUsedWaterHeating,
        g.PerUrbanNGBTUPerCapUsedOther,
        g.UrbanPerResFOKerUsed,
        g.PerUrbanFOKerBTUPerCapUsedSpaceHeating,
        g.PerUrbanFOKerBTUPerCapUsedWaterHeating,
        g.PerUrbanFOKerBTUPerCapUsedOther,
        g.UrbanPerResLPGUsed,
        g.PerUrbanLPGBTUPerCapUsedSpaceHeating,
        g.PerUrbanLPGBTUPerCapUsedWaterHeating,
        g.PerUrbanLPGBTUPerCapUsedOther,
        g.UrbanPerResFFNGUsed,
        g.UrbanPerResFFFOKerUsed,
        g.UrbanPerResFFLPGUsed,
        g.UrbanPerElecHeatingUsedforSpaceHeating,
        g.UrbanPerResFFSpaceHeatingNGUsed,
        g.UrbanPerElecHeatingUsedforWaterHeating,
        g.UrbanPerResFFWaterHeatingNGUsed,
        g.UrbanPerResFFSpaceHeatingFOKerUsed,
        g.UrbanPerResFFWaterHeatingFOKerUsed,
        g.UrbanPerResFFSpaceHeatingLPGUsed,
        g.UrbanPerResFFWaterHeatingLPGUsed,
        g.PerEnergyToUseResElecSpaceHeating,
        g.PerEnergyToUseResElecWaterHeating,
        g.PerEnergyToUseResElecOther,
        g.PerEnergyToUseResElecSpaceHeatingSwitch,
        g.PerEnergyToUseResElecWaterHeatingSwitch,
        g.PerEnergyToUseResNGSpaceHeating,
        g.PerEnergyToUseResNGWaterHeating,
        g.PerEnergyToUseResNGOther,
        g.PerEnergyToUseResFOKerSpaceHeating,
        g.PerEnergyToUseResFOKerWaterHeating,
        g.PerEnergyToUseResFOKerOther,
        g.PerEnergyToUseResLPGSpaceHeating,
        g.PerEnergyToUseResLPGWaterHeating,
        g.PerEnergyToUseResLPGOther,
        g.SuburbanBTUPerCapUsed,
        g.SuburbanPerResElectrification,
        g.SuburbanPerResElecUsed,
        g.PerSuburbanElecBTUPerCapUsedSpaceHeating,
        g.PerSuburbanElecBTUPerCapUsedWaterHeating,
        g.PerSuburbanElecBTUPerCapUsedOther,
        g.SuburbanPerResNGUsed,
        g.PerSuburbanNGBTUPerCapUsedSpaceHeating,
        g.PerSuburbanNGBTUPerCapUsedWaterHeating,
        g.PerSuburbanNGBTUPerCapUsedOther,
        g.SuburbanPerResFOKerUsed,
        g.PerSuburbanFOKerBTUPerCapUsedSpaceHeating,
        g.PerSuburbanFOKerBTUPerCapUsedWaterHeating,
        g.PerSuburbanFOKerBTUPerCapUsedOther,
        g.SuburbanPerResLPGUsed,
        g.PerSuburbanLPGBTUPerCapUsedSpaceHeating,
        g.PerSuburbanLPGBTUPerCapUsedWaterHeating,
        g.PerSuburbanLPGBTUPerCapUsedOther,
        g.SuburbanPerResFFNGUsed,
        g.SuburbanPerResFFFOKerUsed,
        g.SuburbanPerResFFLPGUsed,
        g.SuburbanPerElecHeatingUsedforSpaceHeating,
        g.SuburbanPerResFFSpaceHeatingNGUsed,
        g.SuburbanPerElecHeatingUsedforWaterHeating,
        g.SuburbanPerResFFWaterHeatingNGUsed,
        g.SuburbanPerResFFSpaceHeatingFOKerUsed,
        g.SuburbanPerResFFWaterHeatingFOKerUsed,
        g.SuburbanPerResFFSpaceHeatingLPGUsed,
        g.SuburbanPerResFFWaterHeatingLPGUsed,
        g.RuralBTUPerCapUsed,
        g.RuralPerResElectrification,
        g.RuralPerResElecUsed,
        g.PerRuralElecBTUPerCapUsedSpaceHeating,
        g.PerRuralElecBTUPerCapUsedWaterHeating,
        g.PerRuralElecBTUPerCapUsedOther,
        g.RuralPerResNGUsed,
        g.PerRuralNGBTUPerCapUsedSpaceHeating,
        g.PerRuralNGBTUPerCapUsedWaterHeating,
        g.PerRuralNGBTUPerCapUsedOther,
        g.RuralPerResFOKerUsed,
        g.PerRuralFOKerBTUPerCapUsedSpaceHeating,
        g.PerRuralFOKerBTUPerCapUsedWaterHeating,
        g.PerRuralFOKerBTUPerCapUsedOther,
        g.RuralPerResLPGUsed,
        g.PerRuralLPGBTUPerCapUsedSpaceHeating,
        g.PerRuralLPGBTUPerCapUsedWaterHeating,
        g.PerRuralLPGBTUPerCapUsedOther,
        g.RuralPerResFFNGUsed,
        g.RuralPerResFFFOKerUsed,
        g.RuralPerResFFLPGUsed,
        g.RuralPerElecHeatingUsedforSpaceHeating,
        g.RuralPerResFFSpaceHeatingNGUsed,
        g.RuralPerElecHeatingUsedforWaterHeating,
        g.RuralPerResFFWaterHeatingNGUsed,
        g.RuralPerResFFSpaceHeatingFOKerUsed,
        g.RuralPerResFFWaterHeatingFOKerUsed,
        g.RuralPerResFFSpaceHeatingLPGUsed,
        g.RuralPerResFFWaterHeatingLPGUsed,
        g.BTUperMWh,
        g.grid_coal,
        g.LB_CO2e_MWh_Coal,
        g.grid_oil,
        g.LB_CO2e_MWh_Oil,
        g.grid_ng,
        g.LB_CO2e_MWh_NG,
        g.grid_other_ff,
        g.LB_CO2e_MWh_OtherFos,
        g.MMTperLB,
        g.PerCombCapture,
        g.BTUperCCF,
        g.MCFperCCF,
        g.LB_CO2e_MCF_NG,
        g.BTUperGallonFOKer,
        g.MMTCO2e_ThBarrel_FOKer,
        g.ThBarrelperGallon,
        g.BTUperGallonLPG,
        g.MMTCO2e_ThBarrel_LPG,
        g.ComIndPerElectrification,
        g.ComIndPerFossilFuelUsed2015,
        g.ComIndBBtuUsed,
        g.PerComIndEnergyUse,
        g.ComIndPerFFNGUsed,
        g.PerEnergyToUseComIndNG,
        g.MillionCFperCF,
        g.MMTCO2ePerMillionCFNG_CH4,
        g.MMTCO2ePerMillionCFNG_CO2,
        g.PerUrbanTreeCoverage,
        g.PerForestCoverage,
    )

    assert ghg == 7.114884838160576
